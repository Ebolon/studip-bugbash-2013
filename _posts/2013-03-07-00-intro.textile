---
layout: post
title: Bugs beheben via GitHub
---

h2. {{ page.title }}

p. Um für den Stud.IP Bug Bash 2013 Fehlerkorrekturen einzureichen, gibt es verschiedene Möglichkeiten. Entweder man verschickt seine Korrekturen (auch Patches genannt) per E-Mail, mittels GitHub oder im schlimmsten Fall per Brieftaube.

p. Für das Einsenden von Patches mittels GitHub, haben wir eine aktuelle Version des Stud.IP-Codes bei GitHub als sogenanntes Repository eingestellt: http://github.com/studip/studip-bugbash-2013

p. Wie du hier Fehler beheben und einsenden kannst, wollen wir nun genauer erklären. Das grundsätzliche Vorgehen sieht dafür so aus:

* Einrichten von Git und GitHub
* Anlegen eines Stud.IP "forks"
* Für jeden Fehler:
  * Anlegen eines "topic branches"
  * Editieren des Codes
  * Absenden eines "pull requests"

p. Das klingt jetzt vielleicht noch alles chinesisch, letztlich ist es aber ganz einfach.

bq. Falls du Git im Prinzip schon kennst oder nur (zusätzlich) einen kurzen Befehlsüberblick haben möchtest,
ist folgende Seite sehr zu emfpehlen: http://rogerdudler.github.com/git-guide/index.de.html

h3. Das "Fork &amp; Pull"-Modell

p. Das eben beschriebene Vorgehen wird das "Fork &amp; Pull"-Modell genannt. Mit "fork" ist gemeint, dass man sich vom Quellcode eines (Open-Source-)Projekts wie Stud.IP eine eigene Kopie macht und darin Änderungen vornimmt, die im ursprünglichen Projekt (noch) nicht vorhanden sind. Weil gleichzeitig Änderungen im Original und der eigenen Kopie gemacht werden, läuft der Quellcode gabelförmig ("fork") auseinander.

p. Mit "Pull" sind "pull requests" gemeint. Mit diesen läßt man andere Entwickler von den eigenen Änderungen wissen, die man in seiner eigenen Kopie gemacht hat. Nehmen die Entwickler des Originals diesen "pull request" an, wird dein Code in das ursprüngliche Projekt übernommen. "Pull requests" sind also die ausgleichende Gegenbewegung zu einem "Fork". Während ein "Fork" aufspaltet, führt ein "Pull request" wieder zusammen.

p. Sobald du einen "pull request" (also deine Einladung an die anderen Entwickler, deine Änderungen zu integrieren)  abgesendet hast, können diese deine Patches durchsehen, diskutieren und möglicherweise integrieren.

p. Das "Fork &amp; Pull"-Modell erlaubt also, dass sich jeder eine Kopie eines Projekts anlegt und darin editiert, ohne die Erlaubnis erhalten zu müssen, dies im Original-Projekt machen zu dürfen. Die Änderungen müssen dann von den Entwicklern des Originalprojekts in deren Quellcode "gepullt" werden. Neuen Entwicklern werden so möglichst wenig Steine in den Weg gelegt und die ursprünglichen Entwickler haben nur geringen Koordinationsaufwand.
